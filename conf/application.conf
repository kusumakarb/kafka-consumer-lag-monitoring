include "secure"

# db connections = ((physical_core_count * 2) + effective_spindle_count)
fixedConnectionPool = 5

repository.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}
//play.filters.enabled += "play.filters.cors.CORSFilter"

props {
  burrow{
    host: "192.168.0.10"
    port: "8000"
    version: "v2"
    api: "kafka"
    cluster: "local"
    group: "fraud_detect"
  }
  kafka{
    topic: "input",
    groupID: "fraud_detect"
  }
  scaleConsumers{
    location: "/home/kusumakar/work/play-scala-rest-api-example/linuxCommand.sh"
    command: "/home/kusumakar/work/kafka/bin/kafka-console-consumer.sh --consumer-property group.id=fraud_detect --bootstrap-server 192.168.0.10:9092 -topic input"
  }
  increaseThrottle{
    location: "/home/kusumakar/work/play-scala-rest-api-example/linuxCommand.sh"
    command: "/home/kusumakar/work/kafka/bin/kafka-producer-perf-test.sh --num-records 10000000 --topic input --throughput 10000 --payload-file ~/Downloads/transaction_table.csv --producer-props acks=1 bootstrap.servers=192.168.0.10:9092"
  }
  increaseExecutors{
    location: "/home/kusumakar/work/play-scala-rest-api-example/increaseExecutors.sh"
  }
  bootstrapServers: "172.31.4.97:9092,172.31.5.208:9092,172.31.13.34:9092"
}